[{"/Users/zhangxisheng/Desktop/Music2/src/index.js":"1","/Users/zhangxisheng/Desktop/Music2/src/App.js":"2","/Users/zhangxisheng/Desktop/Music2/src/Detail.js":"3","/Users/zhangxisheng/Desktop/Music2/src/Listbox.js":"4","/Users/zhangxisheng/Desktop/Music2/src/Dropdown.js":"5"},{"size":223,"mtime":1669582249208,"results":"6","hashOfConfig":"7"},{"size":5928,"mtime":1669582734043,"results":"8","hashOfConfig":"7"},{"size":825,"mtime":1669582249207,"results":"9","hashOfConfig":"7"},{"size":1220,"mtime":1669582455051,"results":"10","hashOfConfig":"7"},{"size":1184,"mtime":1669582455051,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mkwhc4",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhangxisheng/Desktop/Music2/src/index.js",[],[],"/Users/zhangxisheng/Desktop/Music2/src/App.js",["28","29","30"],[],"import React, { useState, useEffect } from 'react';\nimport Dropdown from './Dropdown';\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n\n  const spotify = {\n    ClientId: '1aee870fccdb4d3cae9de281ffed5f7b',\n    ClientSecret: '8feee0b1b9544a0784fdbf309b522697'\n  };  \n\n  const data = [\n    {value: 1, name: 'A'},\n    {value: 2, name: 'B'},\n    {value: 3, name: 'C'},\n  ]; \n\n  const [token, setToken] = useState('');  \n  const [genres, setGenres] = useState({selectedGenre: '', listOfGenresFromAPI: []});\n  const [playlist, setPlaylist] = useState({selectedPlaylist: '', listOfPlaylistFromAPI: []});\n  const [tracks, setTracks] = useState({selectedTrack: '', listOfTracksFromAPI: []});\n  const [trackDetail, setTrackDetail] = useState(null);\n\n  useEffect(() => {\n\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    })\n    .then(tokenResponse => {      \n      setToken(tokenResponse.data.access_token);\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      })\n      .then (genreResponse => {        \n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        })\n      });\n      \n    });\n\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]); \n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val, \n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: { 'Authorization' : 'Bearer ' + token}\n    })\n    .then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      })\n    });\n\n    console.log(val);\n  }\n\n  const playlistChanged = val => {\n    console.log(val);\n    setPlaylist({\n      selectedPlaylist: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  }\n\n  const buttonClicked = e => {\n    e.preventDefault();\n\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization' : 'Bearer ' + token\n      }\n    })\n    .then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      })\n    });\n  }\n\n  const listboxClicked = val => {\n\n    const currentTracks = [...tracks.listOfTracksFromAPI];\n\n    const trackInfo = currentTracks.filter(t => t.track.id === val);\n\n    setTrackDetail(trackInfo[0].track);\n  }\n\n  return (\n\n    <div className=\"container\" style={{background: '#16295A', padding: '20px'}}>\n      <header className='App-header'>\n      <form onSubmit={buttonClicked}>\n      \n      <div style={{}}>\n          <p \n          style= {{color:'white', fontSize:'18px', letterSpacing: '0.5em'}}>\n          #pro-aux\n          </p>\n\n          <p\n          style={{color: 'white', fontSize: '10px', letterSpacing: '0.1em'}}>\n          The right songs for any occasion\n          </p>\n      </div >\n\n      <div className='userinfo'>\n        <p\n        style={{color: 'white', fontSize: '13px', letterSpacing: '0.1em', marginLeft: '700px'}}\n        class=\"username\">\n        username\n        </p>\n        <hr\n        style={{marginBottom:'20px'}}>\n        </hr>\n      </div>\n\n      <div className='userInfoBtn'>\n        <a href=''>\n          <button \n          style={{background:'rgba(217, 217, 217, 0.1)', border:'2px solid #FFFFFF',\n          boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25), 0px 4px 4px rgba(0, 0, 0, 0.25)',\n          borderRadius: '30px'}}>\n            <p style={{color: 'white', marginLeft: '10px', marginRight: '10px', right:'50px'}}>\n            View Account Info\n            </p>\n          </button>\n        </a>\n        <br>\n        </br>\n        <br>\n        </br>\n        <a href=''>\n          <button \n          style={{background:'rgba(217, 217, 217, 0.1)', border:'2px solid #FFFFFF',\n          boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25), 0px 4px 4px rgba(0, 0, 0, 0.25)',\n          borderRadius: '30px'}}>\n            <p style={{color: 'white', marginLeft: '10px', marginRight: '10px'}}>\n            Logout / Switch Account\n            </p>\n          </button>\n        </a>\n      </div>\n      <br>\n        </br>\n        <p style={{color: 'white', fontSize: '18px', letterSpacing: '0.15em', padding: '10px', lineHeight:'18px'}}>\n          Welcome to Pro-aux!\n        </p>\n        <Dropdown \n          label=\"First, pick a GENRE you are interested in: \" \n          options={genres.listOfGenresFromAPI} \n          selectedValue={genres.selectedGenre}\n          changed={genreChanged} />\n        <Dropdown label=\"Then, pick a playlist: \"\n          options={playlist.listOfPlaylistFromAPI}\n          selectedValue={playlist.selectedPlaylist}\n          changed={playlistChanged} />\n        \n        <div className=\"col-sm-6 row form-group px-0\">\n            <button type='submit' className=\"btn btn-success col-sm-12\">\n              Search\n            </button>\n        </div>\n\n\n        <div className=\"row\">\n            <Listbox items={tracks.listOfTracksFromAPI} \n            clicked={listboxClicked}/>\n            <p style={{fontSize: '15px', marginLeft:'10px', letterSpacing: '0.2em'}}>\n              {trackDetail && <Detail {...trackDetail} /> }\n            </p>\n            \n        </div>\n\n      </form>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;","/Users/zhangxisheng/Desktop/Music2/src/Detail.js",[],[],"/Users/zhangxisheng/Desktop/Music2/src/Listbox.js",[],[],"/Users/zhangxisheng/Desktop/Music2/src/Dropdown.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":15,"column":9,"nodeType":"33","messageId":"34","endLine":15,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":139,"column":9,"nodeType":"37","endLine":139,"endColumn":20},{"ruleId":"35","severity":1,"message":"36","line":153,"column":9,"nodeType":"37","endLine":153,"endColumn":20},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]